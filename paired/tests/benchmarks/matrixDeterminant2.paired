(FPCore (ap am bp bm cp cm dp dm ep em fp fm gp gm hp hm ip im)
:name "matrixDeterminant2"
:pre (and (<= -10 ap 0) (<= 0 am 10) (<= -10 bp 0) (<= 0 bm 10) (<= -10 cp 0) (<= 0 cm 10) (<= -10 dp 0) (<= 0 dm 10) (<= -10 ep 0) (<= 0 em 10) (<= -10 fp 0) (<= 0 fm 10) (<= -10 gp 0) (<= 0 gm 10) (<= -10 hp 0) (<= 0 hm 10) (<= -10 ip 0) (<= 0 im 10))
(let ((pos (+ (+ (+ (* ap (+ (* ep ip) (* em im))) (* am (+ (* ep im) (* ep im)))) (+ (+ (* gp (+ (* bp fp) (* bm fm))) (* gm (+ (* bp fm) (* bp fm)))) (+ (* cp (+ (* dp hp) (* dm hm))) (* cm (+ (* dp hm) (* dp hm)))))) (+ (+ (* ep (+ (* cp gm) (* cp gm))) (* ep (+ (* cp gm) (* cp gm)))) (+ (+ (* ip (+ (* bp dm) (* bp dm))) (* ip (+ (* bp dm) (* bp dm)))) (+ (* ap (+ (* fp hm) (* fp hm))) (* ap (+ (* fp hm) (* fp hm)))))))) (neg (+ (+ (+ (* ap (+ (* ep im) (* ep im))) (* ap (+ (* ep im) (* ep im)))) (+ (+ (* gp (+ (* bp fm) (* bp fm))) (* gp (+ (* bp fm) (* bp fm)))) (+ (* cp (+ (* dp hm) (* dp hm))) (* cp (+ (* dp hm) (* dp hm)))))) (+ (+ (* ep (+ (* cp gp) (* cm gm))) (* em (+ (* cp gm) (* cp gm)))) (+ (+ (* ip (+ (* bp dp) (* bm dm))) (* im (+ (* bp dm) (* bp dm)))) (+ (* ap (+ (* fp hp) (* fm hm))) (* am (+ (* fp hm) (* fp hm))))))))) (- pos neg)))
