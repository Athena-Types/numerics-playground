Raw internal representation:
(()
 (((sym x0) (prop ()) (dim ())) ((sym x1) (prop ()) (dim ()))
  ((sym x2) (prop ()) (dim ())))
 ((:name (SymData sum)) (:description (SymData "Generated by FPTaylor"))
  (:precision (SymData binary64))
  (:pre
   (Data
    ((SymData and)
     (Data
      ((SymData <=) (NumData (Dec (true 1))) (SymData x0)
       (NumData (Dec (true 2)))))
     (Data
      ((SymData <=) (NumData (Dec (true 1))) (SymData x1)
       (NumData (Dec (true 2)))))
     (Data
      ((SymData <=) (NumData (Dec (true 1))) (SymData x2)
       (NumData (Dec (true 2)))))))))
 (Let
  ((p0 (Op Minus ((Op Plus ((Sym x0) (Sym x1))) (Sym x2))))
   (p1 (Op Minus ((Op Plus ((Sym x1) (Sym x2))) (Sym x0))))
   (p2 (Op Minus ((Op Plus ((Sym x2) (Sym x0))) (Sym x1)))))
  (Op Plus ((Op Plus ((Sym p0) (Sym p1))) (Sym p2)))))
Pretty external representation:
(FPCore (x0 x1 x2)
:name "sum"
:description "Generated by FPTaylor"
:precision binary64
:pre (and (<= 1 x0 2) (<= 1 x1 2) (<= 1 x2 2))
(let ((p0 (- (+ x0 x1) x2)) (p1 (- (+ x1 x2) x0)) (p2 (- (+ x2 x0) x1))) (+ (+ p0 p1) p2)))
