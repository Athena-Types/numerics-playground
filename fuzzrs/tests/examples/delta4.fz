#include "float_ops/mulfp64.fz"
#include "float_ops/addfp64.fz"
#include "float_ops/subfp64.fz"
#include "float_ops/minus.fz"

function delta4
  (x1' : ![2.0]num)
  (x2 : num)
  (x3 : num)
  (x4 : num)
  (x5' : ![2.0]num)
  (x6' : ![2.0]num)
{
  let [x1] = x1';
  let [x5] = x5';
  let [x6] = x6';

  a1 = minus(x2);

  s2 = mulfp64(a1, x3);
  let a2 = s2;

  s3 = mulfp64(x1, x4);
  let a3 = s3;

  s4 = subfp64(|a2, a3|);
  let a4 = s4;

  s5 = mulfp64(x2, x5);
  let a5 = s5;

  s6 = addfp64(|a4, a5|);
  let a6 = s6;

  s7 = mulfp64(x3, x6);
  let a7 = s7;

  s8 = addfp64(|a6, a7|);
  let a8 = s8;

  s9 = mulfp64(x5, x6);
  let a9 = s9;

  // (- (+ (+ (- (* (- x2) x3) (* x1 x4)) (* x2 x5)) (* x3 x6)) (* x5 x6))
  s10 = subfp64(|a8, a9|);

  b1 = minus(x1);

  b2 = addfp64(|b1, x2|);
  let c2 = b2;

  b3 = addfp64(|c2, x3|);
  let c3 = b3;

  b4 = subfp64(|c3, x4|);
  let c4 = b4;

  b5 = addfp64(|c4, x5|);
  let c5 = b5;

  b6 = addfp64(|c5, x6|);
  let c6 = b6;

  // (* x1 (+ (+ (- (+ (+ (- x1) x2) x3) x4) x5) x6))
  b7 = mulfp64(x1, c6);
  let c7 = b7;

  fin = addfp64(|a9, c7|);
  fin
}

delta4
