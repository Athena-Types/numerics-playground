/* combines two 64 element products into a 64 element product 
of pairs */

function combine64
  (a :   (num, (num, (num, (num, (num, (num, (num, (num, (num, (num, 
          (num, (num, (num, (num, (num, (num, (num, (num, (num, (num,
          (num, (num, (num, (num, (num, (num, (num, (num, (num, (num,
          (num, (num, (num, (num, (num, (num, (num, (num, (num, (num,
          (num, (num, (num, (num, (num, (num, (num, (num, (num, (num,
          (num, (num, (num, (num, (num, (num, (num, (num, (num, (num,
          (num, (num, (num, num))))))))))))))))))))))))))))))))))))))
          ))))))))))))))))))))))))))
  (b :   (num, (num, (num, (num, (num, (num, (num, (num, (num, (num, 
          (num, (num, (num, (num, (num, (num, (num, (num, (num, (num,
          (num, (num, (num, (num, (num, (num, (num, (num, (num, (num,
          (num, (num, (num, (num, (num, (num, (num, (num, (num, (num,
          (num, (num, (num, (num, (num, (num, (num, (num, (num, (num,
          (num, (num, (num, (num, (num, (num, (num, (num, (num, (num,
          (num, (num, (num, num))))))))))))))))))))))))))))))))))))))
          ))))))))))))))))))))))))))
{
    let (a0, as1) = a;
    let (a1, as2) = as1;
    let (a2, as3) = as2;
    let (a3, as4) = as3;
    let (a4, as5) = as4;
    let (a5, as6) = as5;
    let (a6, as7) = as6;
    let (a7, as8) = as7;
    let (a8, as9) = as8;
    let (a9, as10) = as9;
    let (a10, as11) = as10;
    let (a11, as12) = as11;
    let (a12, as13) = as12;
    let (a13, as14) = as13;
    let (a14, as15) = as14;
    let (a15, as16) = as15;
    let (a16, as17) = as16;
    let (a17, as18) = as17;
    let (a18, as19) = as18;
    let (a19, as20) = as19;
    let (a20, as21) = as20;
    let (a21, as22) = as21;
    let (a22, as23) = as22;
    let (a23, as24) = as23;
    let (a24, as25) = as24;
    let (a25, as26) = as25;
    let (a26, as27) = as26;
    let (a27, as28) = as27;
    let (a28, as29) = as28;
    let (a29, as30) = as29;
    let (a30, as31) = as30;
    let (a31, as32) = as31;
    let (a32, as33) = as32;
    let (a33, as34) = as33;
    let (a34, as35) = as34;
    let (a35, as36) = as35;
    let (a36, as37) = as36;
    let (a37, as38) = as37;
    let (a38, as39) = as38;
    let (a39, as40) = as39;
    let (a40, as41) = as40;
    let (a41, as42) = as41;
    let (a42, as43) = as42;
    let (a43, as44) = as43;
    let (a44, as45) = as44;
    let (a45, as46) = as45;
    let (a46, as47) = as46;
    let (a47, as48) = as47;
    let (a48, as49) = as48;
    let (a49, as50) = as49;
    let (a50, as51) = as50;
    let (a51, as52) = as51;
    let (a52, as53) = as52;
    let (a53, as54) = as53;
    let (a54, as55) = as54;
    let (a55, as56) = as55;
    let (a56, as57) = as56;
    let (a57, as58) = as57;
    let (a58, as59) = as58;
    let (a59, as60) = as59;
    let (a60, as61) = as60;
    let (a61, as62) = as61;
    let (a62, a63) = as62;

    let (b0, bs1) = b;
    let (b1, bs2) = bs1;
    let (b2, bs3) = bs2;
    let (b3, bs4) = bs3;
    let (b4, bs5) = bs4;
    let (b5, bs6) = bs5;
    let (b6, bs7) = bs6;
    let (b7, bs8) = bs7;
    let (b8, bs9) = bs8;
    let (b9, bs10) = bs9;
    let (b10, bs11) = bs10;
    let (b11, bs12) = bs11;
    let (b12, bs13) = bs12;
    let (b13, bs14) = bs13;
    let (b14, bs15) = bs14;
    let (b15, bs16) = bs15;
    let (b16, bs17) = bs16;
    let (b17, bs18) = bs17;
    let (b18, bs19) = bs18;
    let (b19, bs20) = bs19;
    let (b20, bs21) = bs20;
    let (b21, bs22) = bs21;
    let (b22, bs23) = bs22;
    let (b23, bs24) = bs23;
    let (b24, bs25) = bs24;
    let (b25, bs26) = bs25;
    let (b26, bs27) = bs26;
    let (b27, bs28) = bs27;
    let (b28, bs29) = bs28;
    let (b29, bs30) = bs29;
    let (b30, bs31) = bs30;
    let (b31, bs32) = bs31;
    let (b32, bs33) = bs32;
    let (b33, bs34) = bs33;
    let (b34, bs35) = bs34;
    let (b35, bs36) = bs35;
    let (b36, bs37) = bs36;
    let (b37, bs38) = bs37;
    let (b38, bs39) = bs38;
    let (b39, bs40) = bs39;
    let (b40, bs41) = bs40;
    let (b41, bs42) = bs41;
    let (b42, bs43) = bs42;
    let (b43, bs44) = bs43;
    let (b44, bs45) = bs44;
    let (b45, bs46) = bs45;
    let (b46, bs47) = bs46;
    let (b47, bs48) = bs47;
    let (b48, bs49) = bs48;
    let (b49, bs50) = bs49;
    let (b50, bs51) = bs50;
    let (b51, bs52) = bs51;
    let (b52, bs53) = bs52;
    let (b53, bs54) = bs53;
    let (b54, bs55) = bs54;
    let (b55, bs56) = bs55;
    let (b56, bs57) = bs56;
    let (b57, bs58) = bs57;
    let (b58, bs59) = bs58;
    let (b59, bs60) = bs59;
    let (b60, bs61) = bs60;
    let (b61, bs62) = bs61;
    let (b62, b63) = bs62;

((a0, b0), ((a1, b1), ((a2, b2), ((a3, b3), ((a4, b4), ((a5, b5), ((a6, b6), ((a7, b7), ((a8, b8), ((a9, b9), ((a10, b10), ((a11, b11), ((a12, b12), ((a13, b13), ((a14, b14), ((a15, b15), ((a16, b16), ((a17, b17), ((a18, b18), ((a19, b19), ((a20, b20), ((a21, b21), ((a22, b22), ((a23, b23), ((a24, b24), ((a25, b25), ((a26, b26), ((a27, b27), ((a28, b28), ((a29, b29), ((a30, b30), ((a31, b31), ((a32, b32), ((a33, b33), ((a34, b34), ((a35, b35), ((a36, b36), ((a37, b37), ((a38, b38), ((a39, b39), ((a40, b40), ((a41, b41), ((a42, b42), ((a43, b43), ((a44, b44), ((a45, b45), ((a46, b46), ((a47, b47), ((a48, b48), ((a49, b49), ((a50, b50), ((a51, b51), ((a52, b52), ((a53, b53), ((a54, b54), ((a55, b55), ((a56, b56), ((a57, b57), ((a58, b58), ((a59, b59), ((a60, b60), ((a61, b61), ((a62, b62), (a63,b63)))))))
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                
}
