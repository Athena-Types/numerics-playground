(FPCore (x1p x1n x2p x2n x3p x3n x4p x4n x5p x5n x6p x6n)
:name floudas1
:precision binary64
:pre (and (<= 0 x1p) (<= x1p 0) (<= 0 x2p) (<= x2p 0) (<= 0 x3p) (<= x3p 0) (<= 0 x4p) (<= x4p 0) (<= 0 x5p) (<= x5p 0) (<= 0 x6p) (<= x6p 0) (<= 0 (- x1p x1n) 6) (<= 0 (- x2p x2n) 6) (<= 1 (- x3p x3n) 5) (<= 0 (- x4p x4n) 6) (<= 0 (- x5p x5n) 6) (<= 0 (- x6p x6n) 10) (>= (- (+ (* (- (- x3p x3n) 3) (- (- x3p x3n) 3)) (- x4p x4n)) 4) 0) (>= (- (+ (* (- (- x5p x5n) 3) (- (- x5p x5n) 3)) (- x6p x6n)) 4) 0) (>= (+ (- 2 (- x1p x1n)) (* 3 (- x2p x2n))) 0) (>= (- (+ 2 (- x1p x1n)) (- x2p x2n)) 0) (>= (- (- 6 (- x1p x1n)) (- x2p x2n)) 0) (>= (- (+ (- x1p x1n) (- x2p x2n)) 2) 0))
(let ((pos (+ (+ (+ (+ (+ (+ (* 0 (+ (* (+ x1p 0) (+ x1p 0)) (* (+ x1n 2) (+ x1n 2)))) (* -25 (+ (* (+ x1p 0) (+ x1n 2)) (* (+ x1p 0) (+ x1n 2))))) (+ (* (+ x2p 0) (+ x2n 2)) (* (+ x2p 0) (+ x2n 2)))) (+ (* (+ x3p 0) (+ x3n 1)) (* (+ x3p 0) (+ x3n 1)))) (+ (* (+ x4p 0) (+ x4n 4)) (* (+ x4p 0) (+ x4n 4)))) (+ (* (+ x5p 0) (+ x5n 1)) (* (+ x5p 0) (+ x5n 1)))) (+ (* (+ x6p 0) (+ x6n 4)) (* (+ x6p 0) (+ x6n 4))))) (neg (+ (+ (+ (+ (+ (+ (* 0 (+ (* (+ x1p 0) (+ x1n 2)) (* (+ x1p 0) (+ x1n 2)))) (* 0 (+ (* (+ x1p 0) (+ x1n 2)) (* (+ x1p 0) (+ x1n 2))))) (+ (* (+ x2p 0) (+ x2p 0)) (* (+ x2n 2) (+ x2n 2)))) (+ (* (+ x3p 0) (+ x3p 0)) (* (+ x3n 1) (+ x3n 1)))) (+ (* (+ x4p 0) (+ x4p 0)) (* (+ x4n 4) (+ x4n 4)))) (+ (* (+ x5p 0) (+ x5p 0)) (* (+ x5n 1) (+ x5n 1)))) (+ (* (+ x6p 0) (+ x6p 0)) (* (+ x6n 4) (+ x6n 4)))))) (- pos neg)))
