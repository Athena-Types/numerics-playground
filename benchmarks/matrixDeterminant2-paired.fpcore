(FPCore (ap an bp bn cp cn dp dn ep en fp fn gp gn hp hn ip in)
:name "matrixDeterminant2"
:pre (and (<= 0 ap) (<= ap 0) (<= 0 bp) (<= bp 0) (<= 0 cp) (<= cp 0) (<= 0 dp) (<= dp 0) (<= 0 ep) (<= ep 0) (<= 0 fp) (<= fp 0) (<= 0 gp) (<= gp 0) (<= 0 hp) (<= hp 0) (<= 0 ip) (<= ip 0) (<= -10 an 10) (== ap 0) (<= -10 bn 10) (== bp 0) (<= -10 cn 10) (== cp 0) (<= -10 dn 10) (== dp 0) (<= -10 en 10) (== ep 0) (<= -10 fn 10) (== fp 0) (<= -10 gn 10) (== gp 0) (<= -10 hn 10) (== hp 0) (<= -10 in 10) (== ip 0))
(let ((pos (+ (+ (+ (* ap (+ (* ep ip) (* en in))) (* an (+ (* ep in) (* ep in)))) (+ (+ (* gp (+ (* bp fp) (* bn fn))) (* gn (+ (* bp fn) (* bp fn)))) (+ (* cp (+ (* dp hp) (* dn hn))) (* cn (+ (* dp hn) (* dp hn)))))) (+ (+ (* ep (+ (* cp gn) (* cp gn))) (* ep (+ (* cp gn) (* cp gn)))) (+ (+ (* ip (+ (* bp dn) (* bp dn))) (* ip (+ (* bp dn) (* bp dn)))) (+ (* ap (+ (* fp hn) (* fp hn))) (* ap (+ (* fp hn) (* fp hn)))))))) (neg (+ (+ (+ (* ap (+ (* ep in) (* ep in))) (* ap (+ (* ep in) (* ep in)))) (+ (+ (* gp (+ (* bp fn) (* bp fn))) (* gp (+ (* bp fn) (* bp fn)))) (+ (* cp (+ (* dp hn) (* dp hn))) (* cp (+ (* dp hn) (* dp hn)))))) (+ (+ (* ep (+ (* cp gp) (* cn gn))) (* en (+ (* cp gn) (* cp gn)))) (+ (+ (* ip (+ (* bp dp) (* bn dn))) (* in (+ (* bp dn) (* bp dn)))) (+ (* ap (+ (* fp hp) (* fn hn))) (* an (+ (* fp hn) (* fp hn))))))))) (- pos neg)))
