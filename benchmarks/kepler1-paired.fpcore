(FPCore (x1p x1n x2p x2n x3p x3n x4p x4n)
:name "kepler1"
:precision binary64
:pre (and (<= 0 x1p) (<= x1p 0) (<= 0 x2p) (<= x2p 0) (<= 0 x3p) (<= x3p 0) (<= 0 x4p) (<= x4p 0) (<= 4 x1p 159/25) (== x1n 0) (<= 4 x2p 159/25) (== x2n 0) (<= 4 x3p 159/25) (== x3n 0) (<= 4 x4p 159/25) (== x4n 0))
(let ((pos (+ (+ (+ (+ (+ (+ (+ (* (+ (* x1p x4p) (* x1n x4n)) (+ (+ (+ x1n x2p) x3p) x4n)) (* (+ (* x1p x4n) (* x1p x4n)) (+ (+ (+ x1p x2n) x3n) x4p))) (+ (* x2p (+ (+ (+ x1p x2n) x3p) x4p)) (* x2n (+ (+ (+ x1n x2p) x3n) x4n)))) (+ (* x3p (+ (+ (+ x1p x2p) x3n) x4p)) (* x3n (+ (+ (+ x1n x2n) x3p) x4n)))) (+ (* (+ (* x2p x3p) (* x2n x3n)) x4n) (* (+ (* x2p x3p) (* x2n x3n)) x4n))) (+ (* x1p x3n) (* x1p x3n))) (+ (* x1p x2n) (* x1p x2n))) x4n)) (neg (+ (+ (+ (+ (+ (+ (+ (* (+ (* x1p x4p) (* x1n x4n)) (+ (+ (+ x1p x2n) x3n) x4p)) (* (+ (* x1p x4p) (* x1n x4n)) (+ (+ (+ x1p x2n) x3n) x4p))) (+ (* x2p (+ (+ (+ x1n x2p) x3n) x4n)) (* x2p (+ (+ (+ x1n x2p) x3n) x4n)))) (+ (* x3p (+ (+ (+ x1n x2n) x3p) x4n)) (* x3p (+ (+ (+ x1n x2n) x3p) x4n)))) (+ (* (+ (* x2p x3p) (* x2n x3n)) x4p) (* (+ (* x2p x3n) (* x2p x3n)) x4n))) (+ (* x1p x3p) (* x1n x3n))) (+ (* x1p x2p) (* x1n x2n))) x4p))) (- pos neg)))
